name: Build Project

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  build-macos:
    name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
    strategy:
      matrix:
        platform: [macos]
        build_type: [Release]
    env:
      PARALLEL: -j 2
    runs-on: "${{ matrix.platform }}-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure
        run: cmake -H"." -B"build/${{ matrix.platform }}" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON

      - name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
        run: cmake --build "build/${{ matrix.platform }}" --target vulkan_samples --config ${{ matrix.build_type }} ${{ env.PARALLEL }}
  
  build-windows:
    name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }} with ${{ matrix.compiler }}"
    strategy:
      matrix:
        platform: [windows]
        build_type: [Release]
        compiler: ['Visual Studio 16 2019', 'Visual Studio 15 2017 Win64']
    env:
      PARALLEL: -j 2
    runs-on: "${{ matrix.platform }}-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Configure
        run: cmake -H"." -B"build/${{ matrix.platform }}" -G"${{ matrix.compiler }}" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON

      - name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
        run: cmake --build "build/${{ matrix.platform }}" --target vulkan_samples --config ${{ matrix.build_type }} ${{ env.PARALLEL }}

  build-ubuntu:
    name: "Build Ubuntu in Release"
    env:
      PARALLEL: -j 2
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev

      - name: Configure
        run: cmake -H"." -B"build/ubuntu" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON

      - name: "Build Ubuntu in Release"
        run: cmake --build "build/ubuntu" --target vulkan_samples --config Release ${{ env.PARALLEL }}

  build-ubuntu-d2d:
    name: "Build Ubuntu Direct 2 Display in Release"
    env:
      PARALLEL: -j 2
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev

      - name: Configure
        run: cmake -H"." -B"build/ubuntu" -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON -DVKB_DIRECT_2_DISPLAY=ON

      - name: "Build Ubuntu in Release"
        run: cmake --build "build/ubuntu" --target vulkan_samples --config Release ${{ env.PARALLEL }}

  build_android:
    name: "Build Android in ${{ matrix.build_type }}"
    container: khronosgroup/vulkan-samples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - run: cmake -G "Unix Makefiles" -H. -Bbuild/android -DCMAKE_TOOLCHAIN_FILE=bldsys/toolchain/android_gradle.cmake -DVKB_BUILD_TESTS=ON -DVKB_BUILD_SAMPLES=ON
      - run: cmake --build build/android --config ${{ matrix.build_type }} --target vulkan_samples_package -- -j$(($(nproc)/2+1))
